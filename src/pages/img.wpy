<template>
  <view id="img">
    <view class="tit">
      <view class="bgcbox"></view>
      <view class="butbox">
        <ul>
          <li
            wx:for="{{fenlei}}"
            class="{{ color == item.index ? 'titbut':'titbut2' }}"
            data-index="{{item.index}}"
            bindtap="qiehuan"
          >
            {{item.dosc}}
            <span wx:if="{{item.index != fenlei.length}}" class="titspan">\</span>
          </li>
        </ul>
      </view>
      <view class="appendbox">
          <button
            class="dlan"
            open-type="getUserInfo"
            bindgetuserinfo="append"
            plain=true
          ><van-icon name="plus" /></button>
      </view>



    </view>
    <!-- 插件 -->

    <view class="awhl">
      <imgZhanshi></imgZhanshi>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import imgZhanshi from '../component/imgZhanshi';
import { setupload, tianqi, setuploadimg, getDwFiles，getopenid } from '../api/api';

export default class Img extends wepy.page {
  config = {
    navigationBarTitleText: '第一页',
    navigationBarBackgroundColor: '#8f77B5',
    enablePullDownRefresh: true,
    backgroundTextStyle: 'dark',
    backgroundColor: '#786092'

    // 引用vant组件
    // usingComponents: {
    //   'van-button': '/lib/button/index',
    //   'van-row': '/lib/row/index',
    //   'van-col': '/lib/col/index',
    //   'van-tabbar': '/lib/tabbar/index',
    //   'van-tabbar-item': '/lib/tabbar-item/index',
    //   'van-popup': '/lib/popup/index',
    //   'van-transition': "/lib/transition/index",
    //    "van-icon": "/lib/icon/index"
    // }
  };
  data = {
    active: 0,
    canIUse: '',
    color: '1',
    show: true,
    fenlei: [
      {
        index: 1,
        dosc: '盛夏'
      },
      {
        index: 2,
        dosc: '孤独'
      },
      {
        index: 3,
        dosc: '好逑'
      },
      {
        index: 4,
        dosc: '狗粮'
      }
    ],
    id: ''
  };

  methods = {
    // 切换顶部导航
    async qiehuan(e) {
      this.color = e.currentTarget.dataset.index;
      this.fenlei.forEach(item => {
        if (this.color == item.index) {
          this.id = item.dosc;
        }
      });
      this.updateShowPage();
      this.$apply();
    },

    append(e) {
      
      let login = e.detail.userInfo;


     const uniqueFlag = wx.getStorageSync('uniqueFlag')


      // 判断用户是否授权过
      if(!uniqueFlag){
       
        if(login){
          wepy.setStorageSync('token', 1);
          wepy.setStorageSync('userinfo', login);
          wx.login({
            success: function(res) {
              console.log(res);
              let obj = {
                code: res.code
              };
              console.log('sd', obj);
              getopenid().then(res => {
                console.log('sd2', res);
                wx.setStorageSync('uniqueFlag', res.user.uniqueFlag);
              });
            }
          });
        }
      }

      this.show = false;
      this.$apply();

      // wx.navigateTo({
      //   url: 'pages/release'
      // })

      wepy.navigateTo({
        url: '/pages/release'
      });
    }
  };

  // // 下拉刷新
  // onPullDownRefresh() {
  //   console.log('下拉刷新列表');

  //   setTimeout(function() {
  //     // 不加这个方法真机下拉会一直处于刷新状态，无法复位
  //     wepy.stopPullDownRefresh();
  //   }, 5000);
  // }

  // // 上拉加载
  // onReachBottom() {
  //   console.log('上拉加载下一页');
  //   wepy.showToast({
  //     title: '上拉加载下一页',
  //     icon: 'none',
  //     mask: true,
  //     duration: 1000
  //   });
  // }

  //传递数据
  async updateShowPage() {
    this.$broadcast('chooseShowPage', this.id); //必须是异步执行广播事件，原理和小程序页面刷新和canvas重绘的先后机制有关，否则图表不显示
    this.$apply();
  }

  // 组件加载
  components = {
    imgZhanshi: imgZhanshi
  };

  // 监听页面加载
  async onLoad() {
    console.log('陈安歌');
  }
  async onShow() {
    this.id = '盛夏';
    this.updateShowPage();
    this.$apply();
  }
}
</script>

<style lang='less'>
page {
  width: 100%;
  height: 100%;
  background-image: url('https://www.hanq0904.com/img/1.jpg');
  background-size: 130%;
  background-attachment: fixed;
  background-position: center center;
  background-repeat: no-repeat;

  #img {
    height: 100%;
    width: 100%;

  }

  .bgcbox {
    height: 30px;
    width: 100%;
    background-color: #fff;
    opacity: 0.3;
  }

  .van-tabbar--fixed {
    position: relative;
    height: 30px;
    opacity: 0.5;
  }
  .van-tabbar-item {
    width: 15%;
  }

  .blog {
    .van-popup--bottom.van-popup--safe {
      padding-top: 50px;
      padding-bottom: 30px;
      text-align: center;
    }
    .shouquanbut {
      .van-button--normal {
        width: 200px;
        border-radius: 15px;
        margin-top: 10px;
      }
    }
  }

  .awhl {
    margin-top: 10px;
    width: 100%;
  }
  .dlan {
    padding: 0,0;
    border: 0;
    line-height: 30px;
    // width: 0;
    // height: 0;
    // background-color: #fff;
  }
}
</style>


