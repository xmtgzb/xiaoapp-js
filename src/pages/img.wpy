<template>

  <view class="zhuye">

      <view id="img">
        <view class="tit" >
          <view class="{{ bgc == true ? 'bgcbox':'bgcbox2' }}" ></view>
          <view class="butbox">
            <ul>
              <li
                wx:for="{{fenlei}}"
                class="{{ color == item.index ? 'titbut':'titbut2' }}"
                data-index="{{item.index}}"
                bindtap="qiehuan"
              >
                {{item.dosc}}
                <span wx:if="{{item.index != fenlei.length}}" class="titspan">·</span>
              </li>
            </ul>
          </view>
          <view class="appendbox">
              <button
                class="dlan"
                open-type="getUserInfo"
                bindgetuserinfo="append"
                plain=true
              ><van-icon name="plus" /></button>
          </view>



        </view>
        <!-- 插件 -->

        <view class="awhl">
          <imgZhanshi></imgZhanshi>
        </view>
      </view>

      <view class="heimu" wx:if="{{heimuyincang}}" data-time="{{lastTapTime}}"  bindtap="doubleClick" catchtouchmove="true">
        <view class="heimuimg">
            <image
              style="width: 100%; height: 100%; background-color: #eeeeee;"
              mode="widthFix"
              src="{{realPath}}"
              bindlongtap='saveImg'
              data-realPath="{{realPath}}"
            />
        </view>

        <view class="heimuwenzi">{{fileDesc}}</view>
        
      </view>




  </view>


</template>

<script>
import wepy from 'wepy';
import imgZhanshi from '../component/imgZhanshi';
import { setupload, tianqi, setuploadimg, getDwFiles,getopenid } from '../api/api';


export default class Img extends wepy.page {
  config = {
    navigationBarTitleText: '',
    navigationBarBackgroundColor: '#8f77B5',
    enablePullDownRefresh: true,
    backgroundTextStyle: 'dark',
    backgroundColor: '#786092'


  };
  data = {
    bgc:true,
    active: 0,
    canIUse: '',
    color: '1',
    show: true,
    fenlei: [


      {
        index: 1,
        dosc: '一'
      },
      {
        index: 2,
        dosc: '二'
      },
      {
        index: 3,
        dosc: '三'
      },
      {
        index: 4,
        dosc: '四'
      }

    ],
    id: '',
    page:1,
    lastTapTime:0,
    heimuyincang:false,
    fileDesc:'',
    realPath:'',
    shareObj : {
　　　　title: "2323",        // 默认是小程序的名称
　　　　path: 'pages/img',        // 默认是当前页面，必须是以‘/’开头的完整路径
　　　　
    }
    
  };

  methods = {
    // 切换顶部导航
    async qiehuan(e) {
      this.color = e.currentTarget.dataset.index;
      this.fenlei.forEach(item => {
        if (this.color == item.index) {
          this.id = item.dosc;
        }
      });
      this.$broadcast('qiehuan', this.id); //必须是异步执行广播事件，原理和小程序页面刷新和canvas重绘的先后机制有关，否则图表不显示
      this.$apply();
    },

    append(e) {
      
    let login = e.detail.userInfo;
     const uniqueFlag = wx.getStorageSync('uniqueFlag')


      // 判断用户是否授权过
      if(!uniqueFlag){
       
        if(login){
          wepy.setStorageSync('token', 1);
          wepy.setStorageSync('userinfo', login);
          wx.login({
            success: function(res) {
              // console.log(res);
              let obj = {
                code: res.code
              };
              // console.log('sd', obj);
              getopenid(obj).then(res => {
                // console.log('sd2', res);
                wx.setStorageSync('uniqueFlag', res.user.uniqueFlag);
              });

              wepy.navigateTo({
                url: '/pages/release'
              });


            }
          });
        }


      }


    },


    // 关闭预览图片

    doubleClick(e) {

    var curTime = e.timeStamp
    var lastTime = e.currentTarget.dataset.time  // 通过e.currentTarget.dataset.time 访问到绑定到该组件的自定义数据
    if (curTime - lastTime > 0) {
      if (curTime - lastTime < 300) {//是双击事件
        this.heimuyincang = false
        this.$apply();
      }
      
    }
    this.lastTapTime = curTime
    this.$apply();

  },

    // 保存图片进入本地
    saveImg: function (e) {

        let that=this
        wx.getSetting({
          success(res) {
            //未授权 先授权 然后保存
            if (!res.authSetting['scope.writePhotosAlbum']) {
              wx.authorize({
                scope: 'scope.writePhotosAlbum',
                success(re) {

                  that.saveToBlum(e.currentTarget.dataset.realpath);
                }
              })
            }else{
            //已授 直接调用保存到相册方法
            
              that.saveToBlum(e.currentTarget.dataset.realpath);
            }
          }
        })  
      },

  };


  saveToBlum(e){
      wx.downloadFile({
        url: e,
        success: function (res) {
          wx.saveImageToPhotosAlbum({
            filePath: res.tempFilePath,
            success(result) {

            }
          })
        }
      })
    }

  // // 下拉刷新
  onPullDownRefresh() {
 
    this.$broadcast('onPullDownRefresh', this.id); //必须是异步执行广播事件，原理和小程序页面刷新和canvas重绘的先后机制有关，否则图表不显示
    this.$apply();
    setTimeout(function() {
      // 不加这个方法真机下拉会一直处于刷新状态，无法复位
      wepy.stopPullDownRefresh();
    }, 5000);
  }

  // 上拉加载
  onReachBottom() {
    // console.log('上拉加载下一页');
    this.page = this.page * 1 + 1
    this.$apply();
    this.updateShowPage()

  }

    onPageScroll(a){
      
      if(a.scrollTop == 0){
        this.bgc = true
        this.$apply();

      }else{
        this.bgc = false
        this.$apply();

      }
    }

  //传递数据
  async updateShowPage() {
    this.$broadcast('chooseShowPage', this.id,this.page); //必须是异步执行广播事件，原理和小程序页面刷新和canvas重绘的先后机制有关，否则图表不显示
    this.$apply();
  }


  // 获取子组件传值
  events = {
    imgrealpath(realPath , fileDesc) {

      this.heimuyincang = true
      this.realPath = realPath

      this.fileDesc = fileDesc
      this.$apply();

    }
  };



  // 组件加载
  components = {
    imgZhanshi: imgZhanshi
  };

  // 监听页面加载
  onload(){
    wepy.showShareMenu({
      withShareTicket: true
    })
  }

//在onShareAppMessage中设置分享的界面，**onShareAppMessage和onload同级**
    onShareAppMessage( options ){

    　　return this.shareObj;
    }

  async onShow() {
    this.id = '一';
    this.updateShowPage();
    this.$apply();
  }
}
</script>

<style lang='less'>
page {
  width: 100%;
  height: 100%;
  background-image: url('https://www.hanq0904.com/img/1.jpg');
  background-size: 130%;
  background-attachment: fixed;
  background-position: center center;
  background-repeat: no-repeat;
  .zhuye {
    height: 100%;
    width: 100%;    
  }

  #img {
    height: 100%;
    width: 100%;

  }

  .bgcbox {
    height: 30px;
    width: 100%;
    background-color: #fff;
    opacity: 0.3;
    transition: 1s;

  }
  .bgcbox2 {
    height: 30px;
    width: 100%;
    background-color: #8f77B5;
    transition: 1s;
  }
  .van-tabbar--fixed {
    position: relative;
    height: 30px;
    opacity: 0.5;
  }
  .van-tabbar-item {
    width: 15%;
  }

  .blog {
    .van-popup--bottom.van-popup--safe {
      padding-top: 50px;
      padding-bottom: 30px;
      text-align: center;
    }
    .shouquanbut {
      .van-button--normal {
        width: 200px;
        border-radius: 15px;
        margin-top: 10px;
      }
    }
  }

  .awhl {
    // position:absolute;
    // margin-top: 40px;
    width: 100%;
    position: relative;
    top: 40px;
  }
  .dlan {
    padding: 0,0;
    border: 0;
    line-height: 30px;
    // width: 0;
    // height: 0;
    // background-color: #fff;
  }

  .heimu{
    width: 100%;
    height: 100%;
    background-color: #000;
    z-index: 999;
    position: fixed;

    top: 0;

    display: flex;
	  justify-content: center;
	  align-items: center;

  }

  .heimuimg {
  //  position: absolute;
  //  top: 50%;
  //  left: 50%;
	//  transform: translate(-50%,-50%);
    width: 100%;

  }

  .heimuwenzi{
    width: 100%;
    // height: 15%;
    min-height: 5%;
    background-color: #282a2d;
    position: absolute;
    bottom: 0;
    font-size: 12px;
    padding: 0.5%;
    padding-left: 2%;
    padding-right: 2%;
    box-sizing:border-box
  }


}
</style>


